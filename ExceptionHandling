1).package exception.com.tech.palle;

public class Exception {

	public static void main(String[] args) {
		System.out.println("sahana");
		int i =10;
		try{
		i = i/0;	
			System.out.println("hi");
		}
        catch(ArithmeticException e) {
			System.out.println("banglore");
		}
		System.out.println(i);
        
	}
}
2).package exception.com.tech.palle;

public class Exception1 {

	public static void main(String[] args) {
		try {
			try {
				System.out.println(10/0);
			}
		   catch(ArithmeticException e) {
			   System.out.println("hi");
		   }
		}
		catch(ArithmeticException e) {
			System.out.println("banglore");
		}
		finally {
			System.out.println("sahana");
		}
	}
}
3).package exception.com.tech.palle;

public class Exception2 {

	public static void main(String[] args) {
		try {
			System.out.println(10/5);
			try {
				System.out.println(10/0);
			}
		   catch(ArrayIndexOutOfBoundsException e) {
			   System.out.println("hi");
		   }
		}
		catch(ArithmeticException ex) {
			System.out.println("banglore");
		}
		finally {
			System.out.println("sahana");
		}
	}
}

11/09/2024
package exception.com.tech.palle;

public class Exception3 {

    public static void main(String[] args) {
        System.out.println("welcome");

        // First try-catch block to handle ArithmeticException
        try {
            int i = 20 / 0;  // This will throw ArithmeticException
        } catch (ArithmeticException e) {
            System.out.println("sahana");
        }

        // Second try-catch block to handle ArrayIndexOutOfBoundsException
        try {
            int[] a = {1, 2, 3};
            System.out.println(a[3]);  // This will throw ArrayIndexOutOfBoundsException
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("array");
        }

        // Finally block that always executes
        finally {
            System.out.println("mm");
        }
    }
}
 here we can handle bot the exception easily
****************but here**************
package exception.com.tech.palle;

public class Exception3 {

    public static void main(String[] args) {
        System.out.println("welcome");

        try {
            int i = 20 / 0;  // First exception
            try {
                int[] a = {1, 2, 3};
                System.out.println(a[3]);  // Second exception
            } catch (ArrayIndexOutOfBoundsException e) {
                System.out.println("array");
            }
        } catch (ArithmeticException e) {
            System.out.println("sahana");
        } finally {
            System.out.println("mm");
        }
    }
}
here we can handle the ArrayIndexOutOfBoundsException but cant get the output

12/09/2024
1).package exception.com.tech.palle;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

public class FileNotFoundExcep {

	public static void main(String[] args) {
		System.out.println("Hi");
     File f = new File("C:\\Users\\sahan\\OneDrive\\Desktop\\june3\\Hell.txt");
     try {
		FileReader fr = new FileReader(f);
	} catch (FileNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
     System.out.println("Hello");
	}
}
2).package exception.com.tech.palle;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;

public class FileNotFoundExcep2 {

	public static void main(String[] args) {
		String path = "C:\\Users\\sahan\\OneDrive\\Desktop\\Sahana\\H.txt";
		File f = new File(path);
		System.out.println("hi");
		try {
			FileReader fr = new FileReader(f);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("hello");
		}
          System.out.println("sahana");
	}
}
3).package exception.com.tech.palle;

import java.io.FileNotFoundException;
import java.io.FileReader;

public class FileNotFoundExcep3 {

	public static void main(String[] args) {
		//String path = "C:\\Users\\sahan\\OneDrive\\Desktop\\Sahana\\Hi.txt";
		G g = new G();
		//g.callMethod(path);
		g.callMethod("C:\\Users\\sahan\\OneDrive\\Desktop\\Sahana\\H.txt");

	}

}
class G{
	public void callMethod(String s) {
		try {
			FileReader fr = new FileReader(s);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("hello");
	}
}
4).package exception.com.tech.palle;

import java.io.FileNotFoundException;
import java.io.FileReader;

public class FileNotFoundExcep4 {

	public static void main(String[] args) {
		System.out.println("hi");
		H h = new H();
		try {
			h.callMethod("C:\\Users\\sahan\\OneDrive\\Desktop\\Sahana\\H.txt");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
class H{
	public void callMethod(String s) throws FileNotFoundException {
		FileReader fr = new FileReader(s);
		System.out.println("hello");
	}
}
17/09/2024
1).files concept
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;

public class FileWriteExample {
    public static void main(String[] args) {
        File f = null;
        FileWriter fw = null;
        BufferedWriter bw = null;

        try {
            // Initialize File object
            f = new File("d:/palle.txt");

            // Initialize FileWriter object
            fw = new FileWriter(f);

            // Initialize BufferedWriter object
            bw = new BufferedWriter(fw);

            // Write text to the file
            bw.write("hello we are writing into files\n");
            bw.write("we are learning files\n");

        } catch (IOException e) {
            // Handle any IO exceptions
            e.printStackTrace();
        } finally {
            // Close BufferedWriter and FileWriter in the finally block to ensure they are closed
            try {
                if (bw != null) bw.close();
                if (fw != null) fw.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
}
