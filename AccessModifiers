1).private access modifier(class private)
package accessmodifier;

public class PrivateAccessSpecifier {

	public static void main(String[] args) {
		//A1 obj = new A1();// here we can call constructor only when constructor is default
		/*A1 obj = new A1();
         obj.dispaly(); this is possible when the method is default*/
	}

}
class A1{
	private int data = 40;
	   //private A1() {
	    // }
		private void dispaly() {
			System.out.println("hello from A");
			System.out.println(data);
		}
		class B1 extends A1{
			void access() {
				
		}
	}
}
2).default(package private)
package accessmodifier;

public class DefaultAcccessModifier {

	public static void main(String[] args) {
		A2 obj = new A2();
		System.out.println(obj.data);
        obj.display();
        
	}

}
class A2{
	int data = 40;
	A2(){		
	}
	void display() {
		System.out.println("hello from A2");
	}
	class B2 extends A2{
		void access() {
			System.out.println(data);
			display();
		}
	}
}
3).protected access modifier
package accessmodifier;

public class ProtectedAccessModifier {

	public static void main(String[] args) {
		A3 obj = new A3();
		System.out.println(obj.data);
        obj.display();
	}

}
class A3{
	protected int data = 40;
	protected A3() {
	}
	protected void display() {
		System.out.println("hello from A3");
	}
	class B3 extends A3{
		void access() {
			System.out.println(data);
			display();
		}
	}
}
4).public access modifier
package accessmodifier;

public class PublicAccessModifier {

	public static void main(String[] args) {
		A4 obj = new A4();
		System.out.println(obj.data);
		obj.display();

	}

}
class A4{
	public int data = 40;
	public A4() {
	}
		public void display() {
			System.out.println("hello from A4");
		}
	
	class B4 extends A4{
		void access() {
			System.out.println(data);
			display();
		}
	}
}
