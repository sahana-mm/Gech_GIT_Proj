08/07/2024
1).WAAP to print the elements 10,11,14,26 using array/...?
package arrays;
public class PrintNumbers {
	public static void main(String[] args) {
		int[] arr = {10,11,14,26};
		for(int i =0; i<=arr.length-1; i++) {
			System.out.println(arr[i]);
		}
	}
}
2).WAP to print the alternate numbers of the array..?
package arrays;
public class PrintAlternateNum {
	public static void main(String[] args) {
		int[] a = {10,11,14,26,12,93,65};
		//this will print even index values
		for(int i = 0; i<= a.length-1; i=i+2) {
			System.out.println(a[i]);
			/*this will print odd index values
			 * for(int i = 1; i<= a.length-1; i=i+2) {
				System.out.println(a[i]);
				*/
		}
	}
}
3).WAP to print the numbers of the array in the reverse order...?
package arrays;

public class ReverseNumPrinting {

	public static void main(String[] args) {
		int[] a = {10,11,14,26};
		for(int i = a.length-1; i>= 0; i--) {
			System.out.println(a[i]);
		}
	}
}

4).WAP to print the sum of the even index of the array..?
package arrays;

public class SumOfEvenIndex {

	public static void main(String[] args) {
		int[] a = {10,11,14,26,12,93,65};
		int sum = 0;
		for(int i = 0 ; i<= a.length-1; i= i+2) {
			sum = sum + a[i];
		}
        System.out.println(sum);  
	}
}
5).WAP to print the sum of odd index of the array...?
package arrays;

public class SumOfOddIndex {

	public static void main(String[] args) {
		int[] a = {10,11,14,26,12,93,65};
		int sum = 0;
		for(int i = 1; i<= a.length-1; i=i+2) {
			sum = sum +a[i];
		}
        System.out.println(sum);
	}
}
6).WAP to print the sum of odd index and even indes  sum in the same program of the array...?
package arrays;

public class SumOfOddindexEvenindex {

	public static void main(String[] args) {
		int[] a = {10,11,14,26,12,93,65};
		int Esum = 0;
		int Osum = 0;
		for(int i = 0 ; i<= a.length-1; i++) {
			if(i%2==0) {
				Esum = Esum + a[i];
			}
			else {
				Osum = Osum + a[i];
			}			
		}
		System.out.println(Esum);
		System.out.println(Osum);
	}
}
7).WAP to print the sum of the even number even index and odd number odd index of the array..?
package arrays..?

public class EvennumEvenindexOddnumOddindex {

	public static void main(String[] args) {
		int [] a= {10,11,14,26,12,93,65};
		int Esum = 0;
		int Osum = 0;
		for(int i = 0; i<= a.length-1; i++) {
			if(i%2 == 0) {
				if(a[i]%2 == 0) {
					Esum = Esum + a[i];
				}
			}
			else {
				if(a[i]%2 !=0) {
					Osum = Osum + a[i];
				}
			}
		}
	    System.out.println(Esum);
	    System.out.println(Osum);
	}
}
8).WAP to print the sum of the even number odd index and odd number even index of the array..?
package arrays...?
package arrays;

public class EvenumOddindexOddnumEvenindex {

	public static void main(String[] args) {
		int[] a = {10,11,14,26,12,93,65};
		int Esum = 0;
		int Osum = 0;
		for(int i = 0;i<= a.length-1; i++) {
			if(i%2 == 0) {
				if(a[i]%2 != 0) {
					Osum = Osum +a[i];
				}
			}
			else {
				if(a[i]%2 == 0) {
					Esum = Esum + a[i];
				}
			}
		}
        System.out.println(Osum);
        System.out.println(Esum);
	}
}
9).to find the largest among three numbers in java using arrays...?
package arrays;

public class BigamongNumrs {

	public static void main(String[] args) {
		int[] a = {5,10,3};
		int temp = a[0];
		for(int i = 1; i<= a.length-1; i++) {
		if(a[i] > temp) {
			temp = a[i];
		}
	   }
		System.out.println(temp);
	}
}
09/07/2024
1).WAP to find the max number in the array..?
package arrays;

public class MaxNuminArray {

	public static void main(String[] args) {
		int[] a = {10,15,8,20,5,30};
		int max = a[0];
		for(int i =1; i<= a.length-1; i++) {
			if(a[i] > max) {
				max = a[i];
			}
		}
        System.out.println(max);
	}
}
2).WAP to find the min number in the array..?
package arrays;

public class MinNuminArray {

	public static void main(String[] args) {
		int[] a = {10,15,8,20,5,30};
		int min = a[0];
		for(int i = 1; i <= a.length-1; i++) {
			if(a[i] < min) {
			min = a[i];
		}
	  }
		System.out.println(min);
	}
}
3).WAP to insert values 10,20,30,.....,100 into an integer array using loops...?
package arrays;

public class EmptyArray {

	public static void main(String[] args) {
		int[] a = new int[10];
		for(int i = 0; i<= a.length-1; i++) {
			a[i] = 10 * (i+1);
		}
        for(int i = 0;i<= a.length-1;i++) {
        	System.out.println(a[i]);
        }
     }
}
4).WAP to find the sum of array by passing the array to getSum method present in class A...?
package arrays;

public class SumOfEmptyArray {

	public static void main(String[] args) {
		int[] a = {5,15,3,10};
		A a1 = new A();
		int sum1 = a1.getSum(a);
		System.out.println(sum1);
	}
}
class A{
	public int getSum(int[] a) {
		int sum = 0;
		for(int i=0; i<= a.length-1;i++) {
			sum = sum +a[i];
		}
		return sum;
	}
}
10/07/2024
for each loop
1).print the array numbers by using for each loop..?
array = {10,20,30,40,50};
package foreach;

public class ForEachLoop {

	public static void main(String[] args) {
		int[] a = {10,20,30,40,50};
		for(int x:a) {
			System.out.println(x);
		}
	}
}
2).print the names using for each loop...?
package foreach;

public class Names {

	public static void main(String[] args) {
		String[] arr = {"sahana","sunanda","bharath","manjunath"};
		for(String items:arr) {
			System.out.println(items);
		}
	}
}
3).WAP to find whethe the number is armstrong number or not in a simple way...?
package foreach;

public class ArmStrongNumberEx {

	public static void main(String[] args) {
		int num = 153;
		int temp = num;
		int temp1 = temp;
		int count = 0;
		while(num>0)
		{
			num = num / 10;
			count = count + 1;
		}
		double sum = 0;
		while(temp>0) {
			int rem = temp % 10;
			sum = sum +Math.pow(rem, count);
			temp = temp / 10;
		}
		if(sum == temp1) {
			System.out.println("the number is armstrong number");
		}
		else {
			System.out.println("the number is not an armstrong number");
		}
	}
}
4).WAP to find whethe the number is armstrong number or not in a simple way and without using predefined methods of java...?
package foreach;

public class ArmStrongNum {

	public static void main(String[] args) {
		int num = 153;
		int temp = num;
		int sum = 0;
		while(num > 0) 
		{
			int rem = num % 10;
			sum = sum + (rem * rem * rem);
			num = num / 10;
		}
		if(sum == temp) {
			System.out.println("it is an armstrong number");
		}
		else {
			System.out.println("it is not an armstrong number");
		}
	}
}
5).WAP for swapping of two numbers using temporaty variable...?
package foreach;

public class NumSwapUsingTemp {

	public static void main(String[] args) {
		int x = 10;
		int y = 20;
		int temp;
		
		temp = x;
		x = y;
		y = temp;
		System.out.println(x);
        System.out.println(y);
	}
}
6).WAP for swapping of two numbers without using temporaty variable...?
package foreach;

public class NumSwapWithoutTemp {

	public static void main(String[] args) {
		int x = 10;
		int y = 20;	
		x = x + y;
		y = x - y;
		x = x - y;
		System.out.println(x);
        System.out.println(y);
	}
}
14/07/2024
1).swap the numbrers in the array.. using temporary variable....?
package array;

public class ArraySwapping {

    public static void main(String[] args) {
        int[] arr = {10, 20, 30, 40, 50};
        int temp;

        // Swap adjacent elements
        for (int i = 0; i < arr.length - 1; i += 2) {
            temp = arr[i];        // Store the current element in temp
            arr[i] = arr[i + 1];  // Move the next element to the current position
            arr[i + 1] = temp;    // Move the current element (stored in temp) to the next position
        }

        // Print the resulting array
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }
}
or....
package array;

public class Swap {

	public static void main(String[] args) {
		int[] a = {10,20,30,40,50};
		int temp;
		if(a.length % 2 !=0) {
			a[a.length-1] = a[a.length-1];
		}
		for(int i = 0; i<=a.length-2;i=i+2) {
			temp = a[i];
			a[i] = a[i + 1];
			a[i + 1] = temp;
		}
		for(int i = 0;i<=a.length-1;i++) {
			System.out.println(a[i]);
		}
	}
}
2).swap the numbrers in the array.. without using temporary variable?
package array;

public class SwapWithoutTemp {

	public static void main(String[] args) {
		int[] a = {10,20,30,40,50};
		if(a.length % 2 !=0) {
			a[a.length-1] = a[a.length-1];
		}
		for(int i = 0;i<=a.length-2;i=i+2) {
			a[i] = a[i] + a[i + 1];
			a[i+1] = a[i] - a[i+1];
			a[i] = a[i] - a[i+1];
		}
		for(int i = 0;i<=a.length-1;i++) {
			System.out.println(a[i]);
		}
	}
}
3).copy one array to another array...?
package array;

public class SwapWithoutTemp {

	public static void main(String[] args) {
		int[] a = {10,20,30,40,50};
		if(a.length % 2 !=0) {
			a[a.length-1] = a[a.length-1];
		}
		for(int i = 0;i<=a.length-2;i=i+2) {
			a[i] = a[i] + a[i + 1];
			a[i+1] = a[i] - a[i+1];
			a[i] = a[i] - a[i+1];
		}
		for(int i = 0;i<=a.length-1;i++) {
			System.out.println(a[i]);
		}
	}
}
4).WAP to sort the array of the elments in the given array int[] a = {8,5,11,9,7,6};
package array;

public class SortArray {

    public static void main(String[] args) {
        int[] a = {8, 5, 11, 9, 7, 6};
        int temp;
        
        // Bubble Sort
        for (int i = 0; i < a.length - 1; i++) {
            for (int j = 0; j < a.length - 1 - i; j++) {
                if (a[j] > a[j + 1]) {
                    // Swap a[j] and a[j + 1]
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
        
        // Print sorted array
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}
5).sort the array in descending order...?
package array;

public class SortInDescendingOrder {

    public static void main(String[] args) {
        int[] a = {8, 5, 11, 9, 7, 6};
        int temp;
        
        // Bubble Sort
        for (int i = 0; i < a.length - 1; i++) {
            for (int j = 0; j < a.length - 1 - i; j++) {
                if (a[j] <  a[j + 1]) {
                    // Swap a[j] and a[j + 1]
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
        
        // Print sorted array
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}
6).simpler Java program that checks if a number is present in an array and prints its index if found...?
import java.util.Scanner;

public class NumberSearch {

    public static void main(String[] args) {
        int[] a = {8, 5, 11, 9, 7, 6};
        
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number to search in the array: ");
        int numberToSearch = scanner.nextInt();
        
        boolean found = false;
        for (int i = 0; i < a.length; i++) {
            if (a[i] == numberToSearch) {
                System.out.println("Yes, " + numberToSearch + " is at index " + i);
                found = true;
                break;
            }
        }
        
        if (!found) {
            System.out.println("No, " + numberToSearch + " is not present in the array.");
        }
        
        scanner.close();
    }
}
7)removing duplicates from the array elements.... if a={8,9,11,8,10,12} then output is 
a={8,9,11,10,12}......?
package array;

public class RemoveDuplicates {

	public static void main(String[] args) {
		    int[] a = {8, 5, 11, 9, 7, 6, 5,11};
		    int temp;

		    // Bubble Sort in descending order
		    for (int i = 0; i < a.length - 1; i++) {
		        for (int j = 0; j < a.length - 1 - i; j++) {
		            if (a[j] < a[j + 1]) {
		                // Swap a[j] and a[j + 1]
		                temp = a[j];
		                a[j] = a[j + 1];
		                a[j + 1] = temp;
		            }
		        }
		    }

		    // Print sorted array and remove duplicates
		    System.out.print(a[0]);
		    for (int i = 1; i < a.length; i++) {
		        if (a[i] != a[i - 1]) {
		            System.out.print(" " + a[i]);
		        }
		    }
		}
         }
17/7/2024
1).eliminate duplicate values from the array...?
a={7,8,11,3,4,8};
public class Main {
    public static void main(String[] args) {
        int[] a = {7,8,11,3,4,8};
        int temp;

        // Bubble Sort in ascending order
        for (int i = 0; i < a.length - 1; i++) { // Outer loop: number of passes
            for (int j = 0; j < a.length - 1 - i; j++) { // Inner loop: comparing and swapping
                if (a[j] > a[j + 1]) { // Compare adjacent elements
                    // Swap a[j] and a[j + 1]
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }

        // Print sorted array and remove duplicates
        System.out.print(a[0]); // Print the first element
        for (int i = 1; i < a.length; i++) { // Loop through remaining elements
            if (a[i] != a[i - 1]) { // Check if current element is different from the previous one
                System.out.print(" " + a[i]); // Print the element if it's unique
            }
        }
    }
}
17/07/2024
1).find the second biggest element in the array...?
public class Main {
    public static void main(String[] args) {
        int[] a = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        
        if (a.length < 2) {
            System.out.println("Array needs to have at least two elements.");
            return;
        }

        int max = a[0];
        int secondMax = Integer.MIN_VALUE;

        for (int i = 1; i < a.length; i++) {
            if (a[i] > max) {
                secondMax = max;
                max = a[i];
            } else if (a[i] > secondMax && a[i] != max) {
                secondMax = a[i];
            }
        }

        System.out.println("The second largest element is: " + secondMax);
    }
}
18/07/2024
1).WAP to searching the element and its index in the array....?
package sahana;

public class SearchingElement {

	public static void main(String[] args) {
		int[] a = {8,9,11,8,10,12};
		int element = 11;
		int pos = -1;
		for(int i = 0; i<= a.length-1; i++) {
			if(a[i] == element) {
				pos = i;
				break;
			}
		}
		if(pos == -1) {
			System.out.println(element + " is not present");
		}
		else {
			System.out.println(element + " is present at position " + pos);
		}
	}
}
2).WAP to remove the duplicates of the array...?
package sahana;

public class RemoveDuplicates {

	public static void main(String[] args) {
		int[] a = {8,9,11,8,10,12};
		for(int i = 0; i <= a.length-1; i++) {
			for(int j = i+1; j <= a.length-1; j++) {
			if(a[i] == a[j]) {
				a[j] =-1;
			}
		}
	}
		for(int i = 0; i <= a.length-1; i++) {
			System.out.println(a[i]);
    }
  }
}
3).WAP to print the array elements in the ascending order...?
package sahana;

public class ArrayAscendingOrder {

	public static void main(String[] args) {
		int[] a = {8,9,11,8,10,12};
		int temp;
		for(int i = 0; i <= a.length-1; i++) {
			for(int j = 0; j<a.length-1-i; j++) {
				if(a[j] > a[j+1]) {
					temp = a[j+1];
					a[j+1] = a[j];
					a[j] = temp;
				}
			}
		}
		for(int i = 0; i <= a.length-1; i++) {
			System.out.println(a[i]);
		}
	}
}
4).WAP to print the array elements in the descending order...?
package sahana;

public class ArrayAscendingOrder {

	public static void main(String[] args) {
		int[] a = {8,9,11,8,10,12};
		int temp;
		for(int i = 0; i <= a.length-1; i++) {
			for(int j = 0; j<a.length-1-i; j++) {
				if(a[j] < a[j+1]) {
					temp = a[j+1];
					a[j+1] = a[j];
					a[j] = temp;
				}
			}
		}
		for(int i = 0; i <= a.length-1; i++) {
			System.out.println(a[i]);
		}
	}
}
5).WAP to find the biggest elment in the array...?
package sahana;

public class ArrayBiggestElement {

	public static void main(String[] args) {
		int[] a = {8,9,10};
		int big = a[0];
		for(int i = 1; i <= a.length-1; i++) {
		if(a[i] > big) {
			big = a[i];
		}
	}
			System.out.println(big);
	}
}

02/08/2024
1).how to delete the last element of the array..?
public class Main {
    public static void main(String[] args){
        int[] array = {1, 2, 3, 4, 5};
        System.out.println("Original array:");
        printArray(array);
        int[] newArray = deleteLastElement(array);
        System.out.println("Array after deleting the last element:");
        printArray(newArray);
    }

    public static int[] deleteLastElement(int[] array) {
        int[] newArray = new int[array.length - 1];

         System.arraycopy(array, 0, newArray, 0, array.length - 1);

        return newArray;
    }

    public static void printArray(int[] array) {
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }
}

or....
public class Main {
    public static void main(String[] args) {
        int[] originalArray = {1, 2, 3, 4, 5};
        int[] newArray = deleteLastElement(originalArray);

        // Print the new array
        for (int i : newArray) {
            System.out.print(i + " ");
        }
    }

    public static int[] deleteLastElement(int[] arr) {
        if (arr == null || arr.length == 0) {
            return new int[0];
        }

        int[] newArr = new int[arr.length - 1];
        for (int i = 0; i < newArr.length; i++) {
            newArr[i] = arr[i];
        }

        return newArr;
    }
}
11/08/2024
1).to print the even numbers of the arry first fallowed by odd numberss...?
public class Main {
    public static void main(String[] args) {
        int[] a = {1, 2, 3, 4, 5, 6};
        int[] evenNumbers = new int[a.length];
        int[] oddNumbers = new int[a.length];
        int evenIndex = 0, oddIndex = 0;

        // Separate even and odd numbers
        for (int i = 0; i < a.length; i++) {
            if (a[i] % 2 == 0) {
                evenNumbers[evenIndex++] = a[i];
            } else {
                oddNumbers[oddIndex++] = a[i];
            }
        }

        // Print even numbers
        for (int i = 0; i < evenIndex; i++) {
            System.out.print(evenNumbers[i] + " ");
        }

        // Print odd numbers
        for (int i = 0; i < oddIndex; i++) {
            System.out.print(oddNumbers[i] + " ");
        }
    }
}
2).to find whether the arrays elements are same or not...?
To determine whether two arrays have the same elements regardless of order, you can follow these steps:

Sort both arrays: Sorting will help in comparing the arrays element by element.
Compare the sorted arrays: If they are identical after sorting, the original arrays contain the same elements.
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] a1 = {1, 2, 3, 4, 5};
        int[] a2 = {5, 4, 3, 2, 1};

        // Sort both arrays
        Arrays.sort(a1);
        Arrays.sort(a2);

        // Check if the sorted arrays are equal
        boolean areEqual = Arrays.equals(a1, a2);

        if (areEqual) {
            System.out.println("Array elements are similar");
        } else {
            System.out.println("Array elements are not similar");
        }
    }
}
3).Remove the specific character in the string..?
public class Main {
    public static void main(String[] args) {
        String s = "sahan";
        String result = "";  // Renamed 'final' to 'result'
        char ch = 'h';
        
        // Remove 'h' from the string
        for (int i = 0; i <= s.length() - 1; i++) {
            if (s.charAt(i) != ch) {
                result = result + s.charAt(i);
            }
        }
        
        // Print the resulting string
        for (int i = 0; i <= result.length() - 1; i++) {
            System.out.print(result.charAt(i));
        }
    }
}
22/09/2024
1).finding uncommon elements of both array1 and array2
public class Main
{
	public static void main(String[] args) {
	    
	    int[] a1={1,2,9,10,90};
	    int[] a2={4,5,7,3,2};
	    for(int i=0;i<a1.length;i++){
	        boolean found=false;
	        for(int j=0;j<a1.length;j++){
	            if(a1[i]==a2[j]){
	                found =true;
	                break;
	            }
	        }
	        if(!found){
	            System.out.print(a1[i]+" ");
	        }
	    }
	for(int i=0;i<a2.length;i++){
	    boolean found =false;
	    for(int j=0;j<a2.length;j++){
	        if(a2[i]==a1[j]){
	            found=true;
	            break;
	        }
	    }
	    if(!found){
	        System.out.print(a2[i]+" ");
	    }
         }
}
}
2).finding uncommon elements in the array1..?

public class Main
{
	public static void main(String[] args) {
	    
	    int[] a1={1,2,9,10,90};
	    int[] a2={4,5,7,3,2};
	    for(int i=0;i<a1.length;i++){
	        boolean found=false;
	        for(int j=0;j<a1.length;j++){
	            if(a1[i]==a2[j]){
	                found =true;
	                break;
	            }
	        }
	        if(!found){
	            System.out.print(a1[i]+" ");
	        }
	    }	
	}
}
3).finding uncommon elements in the array2..?	    
public class Main
{
	public static void main(String[] args) {
	    
	    int[] a1={1,2,9,10,90};
	    int[] a2={4,5,7,3,2};
	    for(int i=0;i<a1.length;i++){
	        boolean found=false;
	        for(int j=0;j<a1.length;j++){
	            if(a1[i]==a2[j]){
	                found =true;
	                break;
	            }
	        }
	        if(!found){
	            System.out.print(a1[i]+" ");
	        }
	    }
	}
}
23-10-2024
