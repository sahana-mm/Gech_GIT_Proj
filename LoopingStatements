27/06/2024
looping statements are used to eliminate the duplication of code....
1).To print the numbers from 1 to 10 without using loops is difficult like duplication of code occurs again and again and also execution of the same code again and again in the code.....
public class Main{
public static void main(String[] args){
int res =0,i = 1;
reu = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
.
.
.
.
res = res +i;
System.out.println(res);
}
}
to avoid this code duplication and execution of code again again....
we use to write code by using for loop for this...?
public class Main{
public static void main(String[] args){
for(int i=1;i<=10;i++){
System.out.println(i);
}
}
}
2).to print pattern matching we are using for loop
A
A B
A B C
A B C D
A B C D E
public class Main {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            char letter = 'A'; // Reset letter to 'A' for each new row
            for (int j = 1; j <= i; j++) {
                System.out.print(letter + " ");
                letter++;
            }
            System.out.println();
        }
    }
}

3).to print the pattern matching using for loop
A
B C
D E F
G H I J
K L M N O
public class Main{
    public static void main(String[] args){
        char letter = 'A';
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(letter + " ");
                letter++;
            }
            System.out.println();
        }
    }
}
4).           A
           B  C
        D  E  F 
     G  H  I  J







5).
*
**
***
****
*****
public class RightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = 1; i <= rows; i++) {
            // Inner loop for printing asterisks in each row
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
6).
*****
****
***
**
*
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = rows; i >= 1; i--) {
            // Inner loop for printing asterisks in each row
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
7).
*****
 ****
  ***
   **
    *
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = 1; i <= rows; i++) {
            // Print spaces for alignment
            for (int j = 1; j < i; j++) {
                System.out.print(" ");
            }
            // Inner loop for printing asterisks in each row
            for (int j = i; j <= rows; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}


or...public class Main {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = rows; i >= 1; i--) {
            // Inner loop for printing spaces
            for (int j = 1; j <= rows - i; j++) {
                System.out.print(" ");
            }
            // Inner loop for printing asterisks
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}

8).
    *
   **
  ***
 ****
*****
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = rows; i >= 1; i--) {
            // Inner loop for printing spaces
            for (int j = 1; j <= rows - i; j++) {
                System.out.print(" ");
            }
            // Inner loop for printing asterisks
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
28/06/2024
1)using for loop print the numbers from 1 to 100....?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for(int i = 1; i <= 100; i++) {
			System.out.println(i);
		}
	}
}
2).print numbers 100,99,98,97,......,0 using for loop..?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for(int i = 100; i >= 1; i--) {
			System.out.println(i);
		}
	}
}
3).write a java program by using for loop print the numbers from 1,2,4,8,16,32,64,.....,1024...?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for(int i = 1; i <= 1024; i=i*2) {
			System.out.println(i);
		}
	}
}
4).print 100,95,90,85,80,......,0 using for loop...?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for(int i = 100; i >= 0; i = i-5) {
			System.out.println(i);
		}
	}
}
5).print A,C,E,G,.......Z using for loop...?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for(char c = 'A'; c <= 'Z'; c = (char)(c+2)) {
			System.out.println(c);
		}
	}
}
6).print -100,-98,-96,-94,........,0  using for loop in java....?
package forloops;

public class For {

	public static void main(String[] args) {
		
		for (int i = -100;i <= 0; i += 2) {
			System.out.println(i);
		}
	}
}
7).to find the average and sum of the numbers..?
package forloops;

public class For {

	public static void main(String[] args) {
		
		int n =100;
		int sum = 0;
		double avg = 0;
		for(int i = 1; i <= 100; i++) {
			sum += i; 
		}
		avg = (double)sum / n;
		System.out.println(sum);
		System.out.println(avg);
	}
}

8).   1 
    2 3 2 
  3 4 5 4 3 
4 5 6 7 6 5 4 
for this pyramid like structure the code will be like this....?
public class Main {
    public static void main(String[] args) {
        int rows = 4;

        for (int i = 1; i <= rows; i++) {
            // Print spaces for alignment
            for (int j = 1; j <= rows - i; j++) {
                System.out.print("  ");
            }

            // Print numbers in increasing order
            for (int j = i; j <= 2 * i - 1; j++) {
                System.out.print(j + " ");
            }

            // Print numbers in decreasing order
            for (int j = 2 * i - 2; j >= i; j--) {
                System.out.print(j + " ");
            }

            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
01/06/2024..
1).write a java aprogram to find whether the number is prime number or not....?
like example 67
package forloop;

public class PrimeNumber {

	public static void main(String[] args) {
		int n =67;
		int count=0;
		for(int i =1;i<=n;i++) {
			if(n%i==0) {
				count +=1;
			}
		}
        if(count==2) {
        	System.out.println("it is a prime number");
        }
        else {
        	System.out.println("it is not a print number");
        }
	}

}
2).write a java program to find the prime numbers between the 1 - 100...?
package forloop;

public class PrimeOnetoHundred {

	public static void main(String[] args) {
		int n=100;
		
		for(int i=1;i<=100;i++) {
			int count =0;
			for(int j=1;j<=i;j++) {
				if(i%j==0) {
					count = count + 1;
				}
			}
       if(count ==2) {
    	   System.out.println(i);
        }
       
      }
       
    }
}
02/06/2024
1)write a java program to find the factorial of the number using while loop...?
package whileloop;

public class While {

	public static void main(String[] args) {
		int i = 1;
		int factorial = 1;
		while(i<=5) {
			factorial = factorial * i;
			i++;
		}
       System.out.println(factorial);
	}

}
2).write a java program to find the square of all the numbers from 1 to 100...?
package whileloop;

public class Square {

	public static void main(String[] args) {
	       int i =1;
	       while(i<=100) {
	    	   int square = i * i;
	    	   System.out.println(square);
	    	   i++;
	       }

	}

}
3).write a java program to print the fibonacci series of the number from 1 to 100....(1,1,2,3,5,8,.........,100)...?
here we can see three senarios....
lets see one by one....
a).package whileloop;

public class Fibonacci {

	public static void main(String[] args) {
		int a = 0;
		int b = 1;
		System.out.println(a); // Print the first Fibonacci number
		while (b <= 100) {
			System.out.println(b); // Print the next Fibonacci number
			int fib = a + b;
			a = b;
			b = fib;
		}
	}
}
for this code the output will be like this
1
2
3
5
8
13
21
34
55
89
144
233
377
610
987
1597
2584
4181
6765
10946
17711
28657
46368
75025
121393
196418
317811
514229
832040
1346269
2178309
3524578
5702887
9227465
14930352
24157817
39088169
63245986
102334155
165580141
267914296
433494437
701408733
1134903170
1836311903
-1323752223
512559680
-811192543
-298632863
-1109825406
-1408458269
1776683621
368225352
2144908973
-1781832971
363076002
-1418756969
-1055680967
1820529360
764848393
-1709589543
-944741150
1640636603
695895453
-1958435240
-1262539787
1073992269
-188547518
885444751
696897233
1582341984
-2015728079
-433386095
1845853122
1412467027
-1036647147
375819880
-660827267
-285007387
-945834654
-1230842041
2118290601
887448560
-1289228135
-401779575
-1691007710
-2092787285
511172301
-1581614984
-1070442683
1642909629
572466946
-2079590721
-1507123775
708252800
-798870975
-90618175
-889489150
-980107325
-1869596475
b).package whileloop;

public class Fibonacci {

	public static void main(String[] args) {
		
		int a = 0;
		int b = 1;
		while(a<=100)
		{
			int fib = a + b;
			System.out.println(fib);
			a = b;
			b = fib;
			
		}

	}

}
for this code we are getting output as like this
1
2
3
5
8
13
21
34
55
89
144
233
c).public class Main {

	public static void main(String[] args) {
		int a = 0;
		int b = 1;
		System.out.println(a); // Print the first Fibonacci number
		while (b <= 100) {
			System.out.println(b); // Print the next Fibonacci number
			int fib = a + b;
			a = b;
			b = fib;
		}
	}
}  for this code we are getting output as 1
2
3
5
8
13
21
34
55
89 like this we need to be carefull about all these things...?


