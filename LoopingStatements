27/06/2024
looping statements are used to eliminate the duplication of code....
1).To print the numbers from 1 to 10 without using loops is difficult like duplication of code occurs again and again and also execution of the same code again and again in the code.....
public class Main{
public static void main(String[] args){
int res =0,i = 1;
reu = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
res = res +i;
System.out.println(res);
.
.
.
.
res = res +i;
System.out.println(res);
}
}
to avoid this code duplication and execution of code again again....
we use to write code by using for loop for this...?
public class Main{
public static void main(String[] args){
for(int i=1;i<=10;i++){
System.out.println(i);
}
}
}
2).to print pattern matching we are using for loop
A
A B
A B C
A B C D
A B C D E
public class Main {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            char letter = 'A'; // Reset letter to 'A' for each new row
            for (int j = 1; j <= i; j++) {
                System.out.print(letter + " ");
                letter++;
            }
            System.out.println();
        }
    }
}

3).to print the pattern matching using for loop
A
B C
D E F
G H I J
K L M N O
public class Main{
    public static void main(String[] args){
        char letter = 'A';
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(letter + " ");
                letter++;
            }
            System.out.println();
        }
    }
}
4).           A
           B  C
        D  E  F 
     G  H  I  J







5).
*
**
***
****
*****
public class RightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = 1; i <= rows; i++) {
            // Inner loop for printing asterisks in each row
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
6).
*****
****
***
**
*
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = rows; i >= 1; i--) {
            // Inner loop for printing asterisks in each row
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
7).
*****
 ****
  ***
   **
    *
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = 1; i <= rows; i++) {
            // Print spaces for alignment
            for (int j = 1; j < i; j++) {
                System.out.print(" ");
            }
            // Inner loop for printing asterisks in each row
            for (int j = i; j <= rows; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}
8).
    *
   **
  ***
 ****
*****
public class ReverseRightAngleTriangle {
    public static void main(String[] args) {
        int rows = 5; // Number of rows for the triangle

        // Outer loop for the number of rows
        for (int i = rows; i >= 1; i--) {
            // Inner loop for printing spaces
            for (int j = 1; j <= rows - i; j++) {
                System.out.print(" ");
            }
            // Inner loop for printing asterisks
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            // Move to the next line after each row is printed
            System.out.println();
        }
    }
}

